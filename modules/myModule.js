// App configuration
angular.module('Mwaa2', ['ngRoute']).
    config(function($routeProvider){
        $routeProvider.
            when('/', {templateUrl:'partials/home.html', controller:HomeController}).
            when('/about', {templateUrl:'partials/about.html', controller:AboutController}).
            otherwise({redirectTo:'/', templateUrl:'partials/home.html'})
});

// Main controller
function HomeController($scope){
    // debug
    l("HomeController started");
    // Page elements content
    $scope.header    = "Arkadiusz Maciak";
    $scope.title     = "Mobile & Web Applications";
    $scope.inputInfo = "Type something into empty box, press 'Enter' or click 'Add' button to confirm";
    $scope.listInfo  = "List will show below (press X to delete item)";
    $scope.item      = [];
    $scope.button    = "Add";
    $scope.footer    = "(c) 2017 Arkadiusz Maciak for Mobile & Web Applications Assessment 2"
    // add new element to the list
    $scope.addElement = function(){
        // debug
        l($scope.newItem);
        // get text from input box, add item to the list
        $scope.item.push({'new': $scope.newItem, 'done':false});
        // clear input field
        $scope.newItem = "";
    }
    // remove element from the list
    $scope.removeElement = function(index){
        $scope.item.splice(index, 1);
    };
}

function AboutController($scope){
    $scope.about      = "Mobile and Web Applications";
    $scope.aboutText  = "You will be using the Angular JS to build a single page (SPA) 'To-Do' list mobile web application, " +
                        "and you are to package your app using PhoneGap Build." +
                        "\n\n" +
                        "Features and Instructions:" +
                        "\n\n" +
                        "- Based on an MVC pattern. Your JS app will include a Model (i.e. scope), a View (i.e. HTML file)" +
                        "and a controller (i.e. in a separate JS file)." +
                        "\n" +
                        "- 'To Do' items will be displayed in a simple HTML list. " +
                        "\n" +
                        "- The app will include a form to add list items." +
                        "\n" +
                        "- Two-way data binding. Adding an item via the form will update the model and therefore immediately" +
                        "update the view. Hint: Use Angular directives." +
                        "\n" +
                        "- A config.xml file for PhoneGap. Hint: At the same level as your index.html" +
                        "\n" +
                        "- A (customized) default icon." +
                        "\n" +
                        "- Zip your package and upload (or if you prefer, Git Push) to your GitHub account in a public repo, then link to this from PhoneGap and create a build for Android. This will create a QR code, which you should download and include with your LMS submission, i.e. your submission to LMS should contain the same set of files, as well as the QR code image generated by PhoneGap." +
                        "\n" +
                        "- Note that the free tier of PhoneGap Build only allows one private project (which you need to use if uploading a zip of your project). Feel free to create a public project, but be aware that you will need to connect it to a public Git repo in order to get your files into PhoneGap Build. You can use a private project for the assignment, just ensure that you include the QR code in your submission to Moodle so that I can see your build!" +
                        "\n" +
                        "Files should be order in a sensible hierarchy and zipped together into a single file for submission, and please follow the correct naming conventions. All code files should be correctly labelled, and reused code (e.g. JavaScript, jQuery, etc.) must state the source of the material deployed, using inline comments.";
}

// debugger
function l(s){ console.log(s); }
